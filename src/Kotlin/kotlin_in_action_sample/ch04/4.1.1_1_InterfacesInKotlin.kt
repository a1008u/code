package ch04.ex1_1_1_InterfacesInKotlin

/**
 * 4.1 クラス階層の定義
 * 4.1.1 Kotlinのインターフェイス
 * 4.1.2 open, final, abstract修飾子：デフォルトはfinal
 * 4.1.3 可視性修飾子：デフォルトはpublic
 * 4.1.4 内部クラスとネストされたクラス：デフォルトはネストされたクラス
 * 4.1.5 シールドクラス：限定されたクラス階層を定義する
 * 4.2 非自明なコンストラクタやプロパティを持つクラスの宣言
 * 4.2.1 クラスを初期化する：プライマリコンストラクタと初期化ブロック
 * 4.2.2 セカンダリコンストラクタ：スーパークラスを別のやり方で初期化する
 * 4.2.3 インターフェイス内で宣言されたプロパティを実装する
 * 4.2.4 getterとsetterからバッキングフィールドにアクセスする
 * 4.2.5 アクセサの可視性を変更する
 * 4.3 コンパイラに生成されるメソッド：データクラスとクラス委譲
 * 4.3.1 全てのオブジェクトが持つメソッド
 * 4.3.2 データクラス：全てのオブジェクトが持つメソッドの自動生成された実装
 * 4.3.3 クラスの委譲：byキーワードを使う
 * 4.4 objectキーワード：クラスの宣言とインスタンスの生成の組み合わせ
 * 4.4.1 オブジェクト宣言：シングルトンを簡単に作る
 * 4.4.2 コンパニオンオブジェクト：ファクトリメソッドと静的なメンバの置き場所
 * 4.4.3 通常のオブジェクトとしてのコンパニオンオブジェクト
 * 4.4.4 オブジェクト式：Kotlinによる無名内部クラスの置き換え
 * 4.5 まとめ
 *
 */


interface Clickable {
    fun click()
}

// クラスの継承は1つのみ
class Button : Clickable {
    override fun click() = println("I was clicked")
}

fun main(args: Array<String>) {
    Button().click()
}
