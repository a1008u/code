package JavaSE8.type2;

interface Sample2_8 {
  // int a; //初期化していないためコンパイルエラー
  void methodA(); //範囲が狭いためコンパイルエラー
  // final void methodB(); // finalは使えない
  // static void methodC(); // staticな抽象メソッドは不可
}

// ●SE7、SE8で共通の特徴
// ・インタフェース宣言にはinterfaceキーワードを指定する
// ・インスタンス化はできず、利用する場合は実装クラスを作成し、実装クラス側では抽象メソッドをオーバーライドして使用する
// ・実装クラスを定義するにはimplementsキーワードを使用する
// ・インタフェースをもとにサブインタフェースを作成する場合はextendsキーワードを使用する
// ・インタフェースでは定数（publicstaticfinal）を宣言できる
// ●SE7までの特徴
// ・インタフェースで宣言できるメソッドは抽象メソッドのみである
// ●SE8からの仕様追加
// ・インタフェースで宣言できるメソッドは抽象メソッドのほか、デフォルトメソッドとstaticメソッドを定義できる
